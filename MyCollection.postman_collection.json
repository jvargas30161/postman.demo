{
	"info": {
		"_postman_id": "a1bb47fe-fc16-448b-a152-c1151a6e4074",
		"name": "MyCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18201781",
		"_collection_link": "https://restless-crescent-105076.postman.co/workspace/Curso_Python_Sql~6bd07f17-6424-4486-a6cd-bd4c2310c230/collection/18201781-a1bb47fe-fc16-448b-a152-c1151a6e4074?action=share&source=collection_link&creator=18201781"
	},
	"item": [
		{
			"name": "Demo-collection",
			"item": [
				{
					"name": "Adding a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json()\r",
									"\r",
									"pm.collectionVariables.set('userID', jsonData.data.id)\r",
									"\r",
									"pm.test('Status code should be 201', function(){\r",
									"    pm.response.to.be.have.status(201)\r",
									"})\r",
									"\r",
									"pm.test('email should match', function(){\r",
									"    pm.expect(jsonData.data.email).to.be.eq\r",
									"    ('jorgea_1@gmail.com')\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Jorge Benites Talledo\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"jorgea_1@gmail.com\",\r\n    \"status\": \"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v1/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code should be 200',function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v1/users/{{userID}}",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v1",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code should be 200',function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"const jsonData = pm.response.json()\r",
									"\r",
									"pm.test('status should inactive', function(){\r",
									"    pm.expect(jsonData.data.status).to.be.eq\r",
									"        ('inactive')\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Luis Trelles\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"alex26123_3022@gmail.com\",\r\n    \"status\": \"inactive\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v1/users/{{userID}}",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v1",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code should be 204',function(){\r",
									"    pm.response.to.have.status(204)\r",
									"    })"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v1/users/{{userID}}",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v1",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "1610fd9e6888f9578aacee5242d4766ba884d6d2698419278af7e80671269a01",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Demo-collection-II",
			"item": [
				{
					"name": "Adding a user Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json()\r",
									"\r",
									"pm.collectionVariables.set('userID', jsonData.data.id)\r",
									"\r",
									"pm.test('Status code should be 201', function(){\r",
									"    pm.response.to.be.have.status(201)\r",
									"})\r",
									"\r",
									"pm.test('email should match', function(){\r",
									"    pm.expect(jsonData.data.email).to.be.eq\r",
									"    ('Qalex111_3027@gmail.com')\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Juan Torres Vargas\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Qalex111_3027@gmail.com\",\r\n    \"status\": \"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users/",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{visibility}}",
								"{{version}}",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting a user Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code should be 200',function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users/{{userID}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{visibility}}",
								"{{version}}",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating a user Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code should be 200',function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"const jsonData = pm.response.json()\r",
									"\r",
									"pm.test('status should inactive', function(){\r",
									"    pm.expect(jsonData.data.status).to.be.eq\r",
									"        ('inactive')\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Juan Torres Vargas\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"alex111_3027@gmail.com\",\r\n    \"status\": \"inactive\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users/{{userID}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{visibility}}",
								"{{version}}",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting a user Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code should be 204',function(){\r",
									"    pm.response.to.have.status(204)\r",
									"    })"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{url}}/{{visibility}}/{{version}}/users/{{userID}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{visibility}}",
								"{{version}}",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "1610fd9e6888f9578aacee5242d4766ba884d6d2698419278af7e80671269a01",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "bb7007ec620675fbeb61a124d421bc84a9c63d6a12dce79fc39b7d51261d02a7",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userID",
			"value": "",
			"type": "string"
		}
	]
}